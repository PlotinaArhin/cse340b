-- #########################################################################
-- Example Database Rebuild Script
-- Adapt this based on your actual database structure and data from activities.
-- #########################################################################

-- Drop existing tables and type if they exist (optional, useful for testing)
DROP TABLE IF EXISTS public.inventory;
DROP TABLE IF EXISTS public.classification;
DROP TABLE IF EXISTS public.account;
DROP TYPE IF EXISTS public.account_type;

-- Create account_type ENUM type
CREATE TYPE public.account_type AS ENUM ('Client', 'Admin');

-- Create classification table
CREATE TABLE public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY,
    classification_name VARCHAR(30) NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Create inventory table
CREATE TABLE public.inventory (
    inv_id INT GENERATED BY DEFAULT AS IDENTITY,
    inv_make VARCHAR(30) NOT NULL,
    inv_model VARCHAR(30) NOT NULL,
    inv_year CHAR(4) NOT NULL,
    inv_description TEXT NOT NULL,
    inv_image VARCHAR(50) NOT NULL,
    inv_thumbnail VARCHAR(50) NOT NULL,
    inv_price NUMERIC(9, 0) NOT NULL,
    inv_miles INT NOT NULL,
    inv_color VARCHAR(20) NOT NULL,
    classification_id INT NOT NULL,
    CONSTRAINT inventory_pk PRIMARY KEY (inv_id),
    CONSTRAINT fk_classification FOREIGN KEY (classification_id) REFERENCES public.classification(classification_id)
);

-- Create account table
CREATE TABLE public.account (
    account_id INT GENERATED BY DEFAULT AS IDENTITY,
    account_firstname VARCHAR(30) NOT NULL,
    account_lastname VARCHAR(30) NOT NULL,
    account_email VARCHAR(40) NOT NULL UNIQUE, -- Added UNIQUE constraint
    account_password VARCHAR(255) NOT NULL, -- Increased length for hashed passwords
    account_type public.account_type NOT NULL DEFAULT 'Client'::public.account_type, -- Added default
    CONSTRAINT account_pk PRIMARY KEY (account_id)
);

-- #########################################################################
-- Data for classification table (Add your actual data here)
-- #########################################################################
INSERT INTO public.classification (classification_name)
VALUES
    ('Custom'),
    ('Sport'),
    ('SUV'),
    ('Truck'),
    ('Sedan');
    -- Add more classifications as needed from your activities

-- #########################################################################
-- Data for inventory table (Add your actual data here)
-- #########################################################################
-- Example (replace with your actual inventory data):
INSERT INTO public.inventory (
    inv_make, inv_model, inv_year, inv_description, inv_image, inv_thumbnail, inv_price, inv_miles, inv_color, classification_id
)
VALUES (
    'Chevy', 'Camaro', '2018', 'Sleek and fast', '/images/camaro.jpg', '/images/camaro-tn.jpg', 30000, 10000, 'Red', 2 -- Assuming 'Sport' has classification_id 2
), (
    'GM', 'Hummer', '2023', 'Massive and powerful with small interiors', '/images/hummer.jpg', '/images/hummer-tn.jpg', 85000, 500, 'Black', 3 -- Assuming 'SUV' has classification_id 3
), (
    'Ferrari', 'Enzo', '2003', 'Iconic supercar', '/images/enzo.jpg', '/images/enzo-tn.jpg', 2500000, 1500, 'Red', 2 -- Assuming 'Sport' has classification_id 2
);
    -- Add all other inventory items from your activities


-- #########################################################################
-- !! IMPORTANT !!
-- Copy Query 4 and Query 6 from assignment2.sql and paste them below.
-- These MUST be the last statements executed in this rebuild script.
-- #########################################################################

-- Query 4 (Copied from assignment2.sql): Modify the "GM Hummer" record description.
UPDATE inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer'; -- Use inv_id if known for better precision

-- Query 6 (Copied from assignment2.sql): Update inv_image and inv_thumbnail paths.
UPDATE inventory
SET
    inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
    inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');

-- End of Database Rebuild Script
